# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-publish

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction

      - name: FTP Deploy
      # You may pin to the exact commit or the version.
        # uses: SamKirkland/FTP-Deploy-Action@2a4e9b1312ebeb73a1f72b9330c71831c1e4ce01
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          # ftp server
          server: sl1093.web.hostpoint.ch
          # ftp username
          username: devops@tweak.ch
          # ftp password
          password: ${{ secrets.DEVOPS_PASSWORD }}
          # Server port to connect to (read your web hosts docs)
          #port: # optional
          # protocol to deploy with - ftp, ftps, or ftps-legacy
          #protocol: # optional
          # Folder to upload from, must end with trailing slash /
          #local-dir: src/ # optional
          # Path to upload to on the server. Must end with trailing slash /
          #server-dir: # optional
          # Path and name of the state file - this file is used to track which files have been deployed
          #state-name: # optional
          # Prints which modifications will be made with current config options, but doesnt actually make any changes
          #dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
          #dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
          #exclude: # optional
          # How verbose should the information be - warn, info, debug
          #log-level: # optional
          # strict or loose
          #security: # optional
